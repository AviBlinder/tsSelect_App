{
    "collab_server" : "",
    "contents" : "library(shiny)\nlibrary(lubridate)\nlibrary(forecast)\nlibrary(xts)\nlibrary(dygraphs)\n\nsource(\"helpers.R\")\n\ninput1 <- c(2787, 3891, 3179, 2011, 1636, 1580 ,1489, 1300 ,1356, 1653 ,2013, 2823,\n            2933, 2889, 2938, 2497, 1870, 1726, 1607, 1545, 1396, 1787, 2076 ,2837)\n\n\n# Define server logic required to draw a histogram\nshinyServer(function(input, output) {\n    \n    \n    output$dygraph <- renderDygraph({\n\n        input_vector <- unlist(strsplit(input$ts_input,\",\"))\n        input_vector  <- trimws(input_vector,which = \"both\")   \n        \n        if (length(input_vector) > 10){\n            ts_object <- create_ts(input_data = as.numeric(input_vector),\n                                   start_date = as.Date(input$date),\n                                   frequency_date = as.numeric(input$Frequency))\n        }\n        out_model <- run_models(ts1 = ts_object,\n                                accuracy_measure = NULL)\n        \n        selected_model <- out_model[[\"model\"]][[1]]\n        \n        all <- plot_dygraph(ts_object,out_model,input$Slider)\n        \n        dygraph(all, main = title_name) %>%\n            dyAxis(\"x\", drawGrid = FALSE) %>%\n            dySeries(\"original\", label = \"Actual\") %>%\n            dySeries(c(\"lwr\", \"fit\", \"upr\"), \n                     label = \"predictions\") %>%\n            dyOptions(colors = RColorBrewer::brewer.pal(3, \"Set1\")) %>%\n            dyRangeSelector()\n        \n        \n    })\n})",
    "created" : 1480087627257.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "918498978",
    "id" : "95F78A16",
    "lastKnownWriteTime" : 1480107755,
    "last_content_update" : 1480107755182,
    "path" : "D:/DataScienceProjects/tsSelect_app/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}